{
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.Extractor.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.Extractor.html",
    "title": "Class Extractor | TF3 Yakuza Plugins",
    "keywords": "Class Extractor Converts font asset nodes to binary. Inheritance Object Extractor Implements IInitializer < ReaderParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Extractor : IConverter<NodeContainerFormat, NodeContainerFormat>, IInitializer<ReaderParameters> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Converts font asset nodes to binary. Declaration public NodeContainerFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source The font asset. Returns Type Description NodeContainerFormat The font asset with all its children in BinaryFormat. | Improve this Doc View Source Initialize(ReaderParameters) Initializes the reader parameters. Declaration public void Initialize(ReaderParameters parameters) Parameters Type Name Description ReaderParameters parameters Reader configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.FromText.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.FromText.html",
    "title": "Class FromText | TF3 Yakuza Plugins",
    "keywords": "Class FromText Convert a text file into a CharacterSpacingTable. Inheritance Object FromText Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class FromText : IConverter<BinaryFormat, CharacterSpacingTable> Methods | Improve this Doc View Source Convert(BinaryFormat) Convert a text file into a CharacterSpacingTable. Declaration public CharacterSpacingTable Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The text BinaryFormat. Returns Type Description CharacterSpacingTable The character spacing table."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Font | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Font Classes Extractor Converts font asset nodes to binary. FromText Convert a text file into a CharacterSpacingTable. ReaderParameters Parameters for FontTable reader. ReplacementMerger Converts \"translated\" font files to types. Replacer Replace the font. SpacingReader Reads the vwf table from exe. SpacingWriter Character spacing table replacer. ToText Convert a CharacterSpacingTable into a human readable format."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.ReaderParameters.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.ReaderParameters.html",
    "title": "Class ReaderParameters | TF3 Yakuza Plugins",
    "keywords": "Class ReaderParameters Parameters for FontTable reader. Inheritance Object ReaderParameters Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ReaderParameters : object Constructors | Improve this Doc View Source ReaderParameters() Initializes a new instance of the ReaderParameters class. Declaration public ReaderParameters() Properties | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source Offset Gets or sets the table offset. Declaration public long Offset { get; set; } Property Value Type Description Int64"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.ReplacementMerger.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.ReplacementMerger.html",
    "title": "Class ReplacementMerger | TF3 Yakuza Plugins",
    "keywords": "Class ReplacementMerger Converts \"translated\" font files to types. Inheritance Object ReplacementMerger Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ReplacementMerger : IConverter<NodeContainerFormat, NodeContainerFormat> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Converts \"translated\" font files to types. Declaration public NodeContainerFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source The translated asset. Returns Type Description NodeContainerFormat The translated asset with all its children in custom formats."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.Replacer.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.Replacer.html",
    "title": "Class Replacer | TF3 Yakuza Plugins",
    "keywords": "Class Replacer Replace the font. Inheritance Object Replacer Implements IInitializer < NodeContainerFormat > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Replacer : IConverter<NodeContainerFormat, NodeContainerFormat>, IInitializer<NodeContainerFormat> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Replace font files. Declaration public NodeContainerFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source The original font asset. Returns Type Description NodeContainerFormat The replaced font. | Improve this Doc View Source Initialize(NodeContainerFormat) Converter initializer. Declaration public void Initialize(NodeContainerFormat parameters) Parameters Type Name Description NodeContainerFormat parameters Font replacement. Remarks Initialization is mandatory. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.SpacingReader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.SpacingReader.html",
    "title": "Class SpacingReader | TF3 Yakuza Plugins",
    "keywords": "Class SpacingReader Reads the vwf table from exe. Inheritance Object SpacingReader Implements IInitializer < ReaderParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class SpacingReader : IConverter<BinaryFormat, CharacterSpacingTable>, IInitializer<ReaderParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads the exe and extracts the character spacing table. Declaration public CharacterSpacingTable Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The exe binary format. Returns Type Description CharacterSpacingTable The spacing table. | Improve this Doc View Source Initialize(ReaderParameters) Initializes the reader parameters. Declaration public void Initialize(ReaderParameters parameters) Parameters Type Name Description ReaderParameters parameters Reader configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.SpacingWriter.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.SpacingWriter.html",
    "title": "Class SpacingWriter | TF3 Yakuza Plugins",
    "keywords": "Class SpacingWriter Character spacing table replacer. Inheritance Object SpacingWriter Implements IInitializer < CharacterSpacingTable > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class SpacingWriter : IConverter<BinaryFormat, BinaryFormat>, IInitializer<CharacterSpacingTable> Methods | Improve this Doc View Source Convert(BinaryFormat) Replace the character spacing table in Yakuza exe. Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The original BinaryFormat. Returns Type Description BinaryFormat The BinaryFormat with the new spacing table. Remarks Only the character table is modified. | Improve this Doc View Source Initialize(CharacterSpacingTable) Converter initializer. Declaration public void Initialize(CharacterSpacingTable parameters) Parameters Type Name Description CharacterSpacingTable parameters New spacing table. Remarks Initialization is mandatory. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.ToText.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Font.ToText.html",
    "title": "Class ToText | TF3 Yakuza Plugins",
    "keywords": "Class ToText Convert a CharacterSpacingTable into a human readable format. Inheritance Object ToText Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Font Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ToText : IConverter<CharacterSpacingTable, BinaryFormat> Methods | Improve this Doc View Source Convert(CharacterSpacingTable) Convert a CharacterSpacingTable into a human readable format. Declaration public BinaryFormat Convert(CharacterSpacingTable source) Parameters Type Name Description CharacterSpacingTable source The character spacing table. Returns Type Description BinaryFormat The text BinaryFormat."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Par | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Par Classes Reader Deserializes PAR archives. ReaderParameters Parameters for PAR reader. Writer Serializes PAR archives. WriterParameters Parameters for PAR writer."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Reader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Reader.html",
    "title": "Class Reader | TF3 Yakuza Plugins",
    "keywords": "Class Reader Deserializes PAR archives. Inheritance Object Reader Implements IInitializer < ReaderParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Reader : IConverter<BinaryFormat, NodeContainerFormat>, IInitializer<ReaderParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Converts a BinaryFormat into a NodeContainerFormat. Declaration public virtual NodeContainerFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Input format. Returns Type Description NodeContainerFormat The node container format. | Improve this Doc View Source Initialize(ReaderParameters) Initializes the reader parameters. Declaration public void Initialize(ReaderParameters parameters) Parameters Type Name Description ReaderParameters parameters Reader configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.ReaderParameters.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.ReaderParameters.html",
    "title": "Class ReaderParameters | TF3 Yakuza Plugins",
    "keywords": "Class ReaderParameters Parameters for PAR reader. Inheritance Object ReaderParameters Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ReaderParameters : object Constructors | Improve this Doc View Source ReaderParameters() Initializes a new instance of the ReaderParameters class. Declaration public ReaderParameters() Properties | Improve this Doc View Source DecompressFiles Gets or sets a value indicating whether files will be automatically decompressed. Declaration public bool DecompressFiles { get; set; } Property Value Type Description Boolean"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Writer.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Writer.html",
    "title": "Class Writer | TF3 Yakuza Plugins",
    "keywords": "Class Writer Serializes PAR archives. Inheritance Object Writer Implements IInitializer < WriterParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Writer : IConverter<NodeContainerFormat, BinaryFormat>, IInitializer<WriterParameters> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Converts a NodeContainerFormat into a BinaryFormat. Declaration public virtual BinaryFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Input format. Returns Type Description BinaryFormat The node container format. | Improve this Doc View Source Initialize(WriterParameters) Initializes the writer parameters. Declaration public void Initialize(WriterParameters parameters) Parameters Type Name Description WriterParameters parameters Writer configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.WriterParameters.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.WriterParameters.html",
    "title": "Class WriterParameters | TF3 Yakuza Plugins",
    "keywords": "Class WriterParameters Parameters for PAR writer. Inheritance Object WriterParameters Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class WriterParameters : object Constructors | Improve this Doc View Source WriterParameters() Initializes a new instance of the WriterParameters class. Declaration public WriterParameters() Properties | Improve this Doc View Source DotRoot Gets or sets a value indicating whether the root name is a dot or a full name. Declaration public bool DotRoot { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Endianness Gets or sets the compression algorithm endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source OutputStream Gets or sets the DataStream to write the file. Declaration public DataStream OutputStream { get; set; } Property Value Type Description DataStream Remarks It can be null. In that case, it will be written in memory. | Improve this Doc View Source PlatformId Gets or sets the platform id. Declaration public Platform PlatformId { get; set; } Property Value Type Description Platform | Improve this Doc View Source Version Gets or sets the version (usually 0x00020001). Declaration public uint Version { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source WriteDataSize Gets or sets a value indicating whether the data size is written in header (only in Kenzan). Declaration public bool WriteDataSize { get; set; } Property Value Type Description Boolean"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile.FromBinaryFormat.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile.FromBinaryFormat.html",
    "title": "Class FromBinaryFormat | TF3 Yakuza Plugins",
    "keywords": "Class FromBinaryFormat Creates a ParFile from BinaryFormat. Inheritance Object FromBinaryFormat Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class FromBinaryFormat : IConverter<BinaryFormat, ParFile> Methods | Improve this Doc View Source Convert(BinaryFormat) Create a ParFile from BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source original format. Returns Type Description ParFile The converted ParFile."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.ParFile Classes FromBinaryFormat Creates a ParFile from BinaryFormat."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Compress.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Compress.html",
    "title": "Class Compress | TF3 Yakuza Plugins",
    "keywords": "Class Compress Creates SLLZ files. Inheritance Object Compress Implements IInitializer < CompressorParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Compress : IConverter<BinaryFormat, ParFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Create a SLLZ compressed BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source original format. Returns Type Description ParFile The compressed binary. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressorParameters.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressorParameters.html",
    "title": "Class CompressorParameters | TF3 Yakuza Plugins",
    "keywords": "Class CompressorParameters Parameters for SLLZ compressor. Inheritance Object CompressorParameters Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CompressorParameters : object Constructors | Improve this Doc View Source CompressorParameters() Initializes a new instance of the CompressorParameters class. Declaration public CompressorParameters() Properties | Improve this Doc View Source CompressionType Gets or sets the compression algorithm type. Declaration public CompressionType CompressionType { get; set; } Property Value Type Description CompressionType | Improve this Doc View Source Endianness Gets or sets the compression algorithm endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source OutputStream Gets or sets the DataStream to write the file. Declaration public DataStream OutputStream { get; set; } Property Value Type Description DataStream Remarks It can be null. In that case, it will be written in memory."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressStandard.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressStandard.html",
    "title": "Class CompressStandard | TF3 Yakuza Plugins",
    "keywords": "Class CompressStandard Compress SLLZ standard files. Inheritance Object CompressStandard Implements IInitializer < CompressorParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CompressStandard : IConverter<BinaryFormat, ParFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Creates a SLLZ standard compressed BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original format. Returns Type Description ParFile The compressed binary. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressZlib.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressZlib.html",
    "title": "Class CompressZlib | TF3 Yakuza Plugins",
    "keywords": "Class CompressZlib Compress SLLZ zlib files. Inheritance Object CompressZlib Implements IInitializer < CompressorParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CompressZlib : IConverter<BinaryFormat, ParFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Creates a SLLZ zlib compressed BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original format. Returns Type Description ParFile The compressed binary. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Decompress.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Decompress.html",
    "title": "Class Decompress | TF3 Yakuza Plugins",
    "keywords": "Class Decompress Decompress SLLZ files. Inheritance Object Decompress Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Decompress : IConverter<ParFile, ParFile> Methods | Improve this Doc View Source Convert(ParFile) Decompress a SLLZ compressed BinaryFormat. Declaration public ParFile Convert(ParFile source) Parameters Type Name Description ParFile source Compressed format. Returns Type Description ParFile The decompressed binary."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressStandard.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressStandard.html",
    "title": "Class DecompressStandard | TF3 Yakuza Plugins",
    "keywords": "Class DecompressStandard Decompress SLLZ standard files. Inheritance Object DecompressStandard Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class DecompressStandard : IConverter<ParFile, ParFile> Methods | Improve this Doc View Source Convert(ParFile) Decompress a SLLZ standard compressed BinaryFormat. Declaration public ParFile Convert(ParFile source) Parameters Type Name Description ParFile source Compressed format. Returns Type Description ParFile The decompressed binary."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressZlib.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressZlib.html",
    "title": "Class DecompressZlib | TF3 Yakuza Plugins",
    "keywords": "Class DecompressZlib Decompress SLLZ zLib files. Inheritance Object DecompressZlib Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class DecompressZlib : IConverter<ParFile, ParFile> Methods | Improve this Doc View Source Convert(ParFile) Decompress a SLLZ zlib compressed BinaryFormat. Declaration public ParFile Convert(ParFile source) Parameters Type Name Description ParFile source Compressed format. Returns Type Description ParFile The decompressed binary."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Classes Compress Creates SLLZ files. CompressorParameters Parameters for SLLZ compressor. CompressStandard Compress SLLZ standard files. CompressZlib Compress SLLZ zlib files. Decompress Decompress SLLZ files. DecompressStandard Decompress SLLZ standard files. DecompressZlib Decompress SLLZ zLib files. SllzException SLLZ compressor exception."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.SllzException.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.SllzException.html",
    "title": "Class SllzException | TF3 Yakuza Plugins",
    "keywords": "Class SllzException SLLZ compressor exception. Inheritance Object SllzException Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class SllzException : Exception Constructors | Improve this Doc View Source SllzException() Initializes a new instance of the SllzException class. Declaration public SllzException() | Improve this Doc View Source SllzException(SerializationInfo, StreamingContext) Initializes a new instance of the SllzException class. Declaration protected SllzException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization info. StreamingContext context Streaming context. | Improve this Doc View Source SllzException(String) Initializes a new instance of the SllzException class. Declaration public SllzException(string message) Parameters Type Name Description String message Exception message. | Improve this Doc View Source SllzException(String, System.Exception) Initializes a new instance of the SllzException class. Declaration public SllzException(string message, System.Exception innerException) Parameters Type Name Description String message Exception message. System.Exception innerException Inner exception."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.CompressionType.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.CompressionType.html",
    "title": "Enum CompressionType | TF3 Yakuza Plugins",
    "keywords": "Enum CompressionType File compression types. Namespace : TF3.YarhlPlugin.YakuzaCommon.Enums Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public enum CompressionType : int Fields Name Description None No compression. Standard Standard compression (LZ variant) Zlib Use zlib compression."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Endianness.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Endianness.html",
    "title": "Enum Endianness | TF3 Yakuza Plugins",
    "keywords": "Enum Endianness Endianness (byte order). Namespace : TF3.YarhlPlugin.YakuzaCommon.Enums Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public enum Endianness : int Fields Name Description BigEndian Big endian LittleEndian Little endian"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Enums | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Enums Enums CompressionType File compression types. Endianness Endianness (byte order). Platform Platforms ids. Only PlayStation3 is used in PAR archives."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Platform.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Platform.html",
    "title": "Enum Platform | TF3 Yakuza Plugins",
    "keywords": "Enum Platform Platforms ids. Only PlayStation3 is used in PAR archives. Namespace : TF3.YarhlPlugin.YakuzaCommon.Enums Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public enum Platform : int Fields Name Description Durango Durango (Microsoft Xbox ONE codename) Generic Generic platform Nintendo3Ds Nintendo 3DS PlayStation3 Sony PlayStation 3 PlayStation4 Sony PlayStation 4 Vita Sony PS Vita Wii Nintendo Wii WiiU Nintendo Wii U Win32 Microsoft Windows 32bits Win64 Microsoft Windows 64bits Xbox360 Microsoft Xbox 360"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Formats.CharacterSpacingTable.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Formats.CharacterSpacingTable.html",
    "title": "Class CharacterSpacingTable | TF3 Yakuza Plugins",
    "keywords": "Class CharacterSpacingTable Yakuza font character spacing table. Inheritance Object CharacterSpacingTable Namespace : TF3.YarhlPlugin.YakuzaCommon.Formats Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CharacterSpacingTable : IFormat Constructors | Improve this Doc View Source CharacterSpacingTable() Initializes a new instance of the CharacterSpacingTable class. Declaration public CharacterSpacingTable() Properties | Improve this Doc View Source Item[Char] Gets the CharacterSpacing of a char. Declaration public CharacterSpacing this[char character] { get; set; } Parameters Type Name Description Char character The character. Property Value Type Description CharacterSpacing | Improve this Doc View Source Item[Int32] Gets the CharacterSpacing of a char. Declaration public CharacterSpacing this[int index] { get; set; } Parameters Type Name Description Int32 index The character index (ASCII). Property Value Type Description CharacterSpacing | Improve this Doc View Source TableOffset Gets or sets the table offset inside the file. Declaration public long TableOffset { get; set; } Property Value Type Description Int64"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Formats.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Formats.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Formats | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Formats Classes CharacterSpacingTable Yakuza font character spacing table. ParFile File inside a PAR container."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Formats.ParFile.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Formats.ParFile.html",
    "title": "Class ParFile | TF3 Yakuza Plugins",
    "keywords": "Class ParFile File inside a PAR container. Inheritance Object ParFile Namespace : TF3.YarhlPlugin.YakuzaCommon.Formats Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParFile : BinaryFormat Constructors | Improve this Doc View Source ParFile(System.IO.Stream) Initializes a new instance of the ParFile class. Declaration public ParFile(System.IO.Stream stream) Parameters Type Name Description System.IO.Stream stream Binary stream. | Improve this Doc View Source ParFile(ParFileInfo, System.IO.Stream) Initializes a new instance of the ParFile class. Declaration public ParFile(ParFileInfo fileInfo, System.IO.Stream stream) Parameters Type Name Description ParFileInfo fileInfo File parameters. System.IO.Stream stream Binary stream. Properties | Improve this Doc View Source FileInfo Gets or sets the file parameters. Declaration public ParFileInfo FileInfo { get; set; } Property Value Type Description ParFileInfo Methods | Improve this Doc View Source DeepClone() Declaration public override object DeepClone() Returns Type Description Object"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.CharacterSpacing.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.CharacterSpacing.html",
    "title": "Class CharacterSpacing | TF3 Yakuza Plugins",
    "keywords": "Class CharacterSpacing Yakuza font character spacing. Inheritance Object CharacterSpacing Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CharacterSpacing : object Constructors | Improve this Doc View Source CharacterSpacing() Initializes a new instance of the CharacterSpacing class. Declaration public CharacterSpacing() | Improve this Doc View Source CharacterSpacing(String) Initializes a new instance of the CharacterSpacing class. Declaration public CharacterSpacing(string values) Parameters Type Name Description String values Values in a space separated string. Properties | Improve this Doc View Source BottomLeft Gets or sets the bottom left space. Declaration public float BottomLeft { get; set; } Property Value Type Description Single | Improve this Doc View Source BottomRight Gets or sets the bottom right space. Declaration public float BottomRight { get; set; } Property Value Type Description Single | Improve this Doc View Source MiddleLeft Gets or sets the middle left space. Declaration public float MiddleLeft { get; set; } Property Value Type Description Single | Improve this Doc View Source MiddleRight Gets or sets the middle right space. Declaration public float MiddleRight { get; set; } Property Value Type Description Single | Improve this Doc View Source TopLeft Gets or sets the top left space. Declaration public float TopLeft { get; set; } Property Value Type Description Single | Improve this Doc View Source TopRight Gets or sets the top right space. Declaration public float TopRight { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.FileHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.FileHeader.html",
    "title": "Class FileHeader | TF3 Yakuza Plugins",
    "keywords": "Class FileHeader Archive header. Inheritance Object FileHeader Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class FileHeader : object Properties | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source Magic Gets or sets the file magic number. Declaration public string Magic { get; set; } Property Value Type Description String | Improve this Doc View Source PlatformId Gets or sets the platform id value. Declaration public Platform PlatformId { get; set; } Property Value Type Description Platform | Improve this Doc View Source Relocated Gets or sets the relocated byte. Declaration public byte Relocated { get; set; } Property Value Type Description Byte | Improve this Doc View Source Size Gets or sets the data size. In newer versions it is always 0. Declaration public uint Size { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SizeExtended Gets or sets the size extended byte. Declaration public byte SizeExtended { get; set; } Property Value Type Description Byte | Improve this Doc View Source Version Gets or sets the version value. Declaration public uint Version { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Types | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Types Classes CharacterSpacing Yakuza font character spacing. FileHeader Archive header. ParDirectoryInfo Par directory info. ParFileInfo Par file info. ParIndex Par archive index. SllzHeader SLLZ compressed file header."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParDirectoryInfo.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParDirectoryInfo.html",
    "title": "Class ParDirectoryInfo | TF3 Yakuza Plugins",
    "keywords": "Class ParDirectoryInfo Par directory info. Inheritance Object ParDirectoryInfo Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParDirectoryInfo : object Properties | Improve this Doc View Source FileCount Gets or sets the number of files inside this directory (not in subdirectories). Declaration public uint FileCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source FileStartIndex Gets or sets the index of the first file. Declaration public uint FileStartIndex { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source RawAttributes Gets or sets the attributes of the directory. Declaration public uint RawAttributes { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SubdirectoryCount Gets or sets the number of subdirectories inside this directory. Declaration public uint SubdirectoryCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SubdirectoryStartIndex Gets or sets the index of the first subdirectory. Declaration public uint SubdirectoryStartIndex { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParFileInfo.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParFileInfo.html",
    "title": "Class ParFileInfo | TF3 Yakuza Plugins",
    "keywords": "Class ParFileInfo Par file info. Inheritance Object ParFileInfo Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParFileInfo : object Constructors | Improve this Doc View Source ParFileInfo() Initializes a new instance of the ParFileInfo class. Declaration public ParFileInfo() | Improve this Doc View Source ParFileInfo(ParFileInfo) Initializes a new instance of the ParFileInfo class. Declaration public ParFileInfo(ParFileInfo info) Parameters Type Name Description ParFileInfo info Object to copy. Properties | Improve this Doc View Source CompressedSize Gets or sets the compressed file size. Declaration public uint CompressedSize { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source DataOffset Gets or sets the offset of the data inside the PAR archive (lower part). Declaration public uint DataOffset { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source ExtendedOffset Gets or sets the offset of the data inside the PAR archive (higher part). Declaration public uint ExtendedOffset { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Flags Gets or sets the file flags. Declaration public uint Flags { get; set; } Property Value Type Description UInt32 Remarks For now, only 0x80000000 (IsCompressed). | Improve this Doc View Source OriginalSize Gets or sets the original file size. Declaration public uint OriginalSize { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source RawAttributes Gets or sets the file attributes. Declaration public uint RawAttributes { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Timestamp Gets or sets the file timestamp (Unix format). Declaration public long Timestamp { get; set; } Property Value Type Description Int64 Remarks Number of seconds from 1970/01/01. Methods | Improve this Doc View Source IsCompressed() Check if file is compressed. Declaration public bool IsCompressed() Returns Type Description Boolean True if the file is compressed."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParIndex.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParIndex.html",
    "title": "Class ParIndex | TF3 Yakuza Plugins",
    "keywords": "Class ParIndex Par archive index. Inheritance Object ParIndex Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParIndex : object Properties | Improve this Doc View Source DirectoryCount Gets or sets the number of directories inside the archive. Declaration public uint DirectoryCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source DirectoryStartOffset Gets or sets the file offset of the directory info. Declaration public uint DirectoryStartOffset { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source FileCount Gets or sets the number of files inside the archive. Declaration public uint FileCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source FileStartOffset Gets or sets the file offset of the file info. Declaration public uint FileStartOffset { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.SllzHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.SllzHeader.html",
    "title": "Class SllzHeader | TF3 Yakuza Plugins",
    "keywords": "Class SllzHeader SLLZ compressed file header. Inheritance Object SllzHeader Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class SllzHeader : object Properties | Improve this Doc View Source CompressedSize Gets or sets the compressed file size. Includes the header size. Declaration public uint CompressedSize { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source CompressionType Gets or sets the compressor type. Declaration public CompressionType CompressionType { get; set; } Property Value Type Description CompressionType | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source HeaderSize Gets or sets the header size. Declaration public ushort HeaderSize { get; set; } Property Value Type Description UInt16 | Improve this Doc View Source Magic Gets or sets the file magic number: \"SLLZ\". Declaration public string Magic { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalSize Gets or sets the original file size. Declaration public uint OriginalSize { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ExtractStrings.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ExtractStrings.html",
    "title": "Class ExtractStrings | TF3 Yakuza Plugins",
    "keywords": "Class ExtractStrings Extracts Yakuza Kiwami 2 ARMP translatable strings to a Po file. Inheritance Object ExtractStrings Implements IInitializer < PoHeader > Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class ExtractStrings : IConverter<ArmpTable, Po>, IInitializer<PoHeader> Methods | Improve this Doc View Source Convert(ArmpTable) Extracts strings to a Po file. Declaration public Po Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Input format. Returns Type Description Po The po file. | Improve this Doc View Source Initialize(PoHeader) Converter initializer. Declaration public void Initialize(PoHeader parameters) Parameters Type Name Description PoHeader parameters Header to use in created Po elements. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.FromXlsx.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.FromXlsx.html",
    "title": "Class FromXlsx | TF3 Yakuza Plugins",
    "keywords": "Class FromXlsx Converts a XLSX into Yakuza Kiwami 2 ARMP file. Inheritance Object FromXlsx Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class FromXlsx : IConverter<BinaryFormat, ArmpTable> Methods | Improve this Doc View Source Convert(BinaryFormat) Converts a Armp into a Excel binary. Declaration public ArmpTable Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Input format. Returns Type Description ArmpTable The xlsx format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Classes ExtractStrings Extracts Yakuza Kiwami 2 ARMP translatable strings to a Po file. FromXlsx Converts a XLSX into Yakuza Kiwami 2 ARMP file. Reader Deserializes ARMP files. ToXlsx Converts Yakuza Kiwami 2 ARMP files to XLSX. Translate Inserts strings from Po file to an Armp table. Writer Serializes Yakuza Kiwami 2 ARMP files."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Reader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Reader.html",
    "title": "Class Reader | TF3 Yakuza Plugins",
    "keywords": "Class Reader Deserializes ARMP files. Inheritance Object Reader Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Reader : IConverter<BinaryFormat, ArmpTable> Methods | Improve this Doc View Source Convert(BinaryFormat) Converts a BinaryFormat into a Armp. Declaration public ArmpTable Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Input format. Returns Type Description ArmpTable The Armp format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ToXlsx.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ToXlsx.html",
    "title": "Class ToXlsx | TF3 Yakuza Plugins",
    "keywords": "Class ToXlsx Converts Yakuza Kiwami 2 ARMP files to XLSX. Inheritance Object ToXlsx Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class ToXlsx : IConverter<ArmpTable, BinaryFormat> Methods | Improve this Doc View Source Convert(ArmpTable) Converts a Armp into a Excel binary. Declaration public BinaryFormat Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Input format. Returns Type Description BinaryFormat The xlsx format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Translate.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Translate.html",
    "title": "Class Translate | TF3 Yakuza Plugins",
    "keywords": "Class Translate Inserts strings from Po file to an Armp table. Inheritance Object Translate Implements IInitializer < Po > Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Translate : IConverter<ArmpTable, ArmpTable>, IInitializer<Po> Methods | Improve this Doc View Source Convert(ArmpTable) Inserts the translated strings from Po file in a Armp table. Declaration public ArmpTable Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Original Armp. Returns Type Description ArmpTable Translated Armp. | Improve this Doc View Source Initialize(Po) Converter initializer. Declaration public void Initialize(Po parameters) Parameters Type Name Description Po parameters Po with translation. Remarks Initialization is mandatory. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Writer.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Writer.html",
    "title": "Class Writer | TF3 Yakuza Plugins",
    "keywords": "Class Writer Serializes Yakuza Kiwami 2 ARMP files. Inheritance Object Writer Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Writer : IConverter<ArmpTable, BinaryFormat> Methods | Improve this Doc View Source Convert(ArmpTable) Converts an Armp into a Binary Format. Declaration public BinaryFormat Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Input format. Returns Type Description BinaryFormat The binary format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.BinaryPoSplitter.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.BinaryPoSplitter.html",
    "title": "Class BinaryPoSplitter | TF3 Yakuza Plugins",
    "keywords": "Class BinaryPoSplitter Po files splitter. Inheritance Object BinaryPoSplitter Namespace : Po Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class BinaryPoSplitter : IConverter<BinaryFormat, NodeContainerFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Splits a Po file (BinaryFormat) in smaller parts. Declaration public NodeContainerFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original Po file. Returns Type Description NodeContainerFormat A container with the smaller parts."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po Classes BinaryPoSplitter Po files splitter. Merger Po files merger. Splitter Po files splitter."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Merger.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Merger.html",
    "title": "Class Merger | TF3 Yakuza Plugins",
    "keywords": "Class Merger Po files merger. Inheritance Object Merger Namespace : Po Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Merger : IConverter<NodeContainerFormat, Yarhl.Media.Text.Po> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Merges all parts (BinaryFormat) in a Po file. Declaration public Yarhl.Media.Text.Po Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Po parts. Returns Type Description Yarhl.Media.Text.Po The merged Po."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Splitter.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Splitter.html",
    "title": "Class Splitter | TF3 Yakuza Plugins",
    "keywords": "Class Splitter Po files splitter. Inheritance Object Splitter Namespace : Po Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Splitter : IConverter<Yarhl.Media.Text.Po, NodeContainerFormat> Methods | Improve this Doc View Source Convert(Yarhl.Media.Text.Po) Splits a Po file in smaller parts. Declaration public NodeContainerFormat Convert(Yarhl.Media.Text.Po source) Parameters Type Name Description Yarhl.Media.Text.Po source Original Po file. Returns Type Description NodeContainerFormat A container with the smaller parts."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.Endianness.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.Endianness.html",
    "title": "Enum Endianness | TF3 Yakuza Plugins",
    "keywords": "Enum Endianness Endianness (byte order). Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Enums Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public enum Endianness : int Fields Name Description BigEndian Big endian LittleEndian Little endian"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.FieldType.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.FieldType.html",
    "title": "Enum FieldType | TF3 Yakuza Plugins",
    "keywords": "Enum FieldType Possible field types in ARMP files. Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Enums Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public enum FieldType : int Fields Name Description Boolean Boolean. Float16 Floating-point number (16 bits). Float32 Floating-point number (32 bits). Float64 Floating-point number (64 bits). Int16 Signed integer (16 bits). Int32 Signed integer (32 bits). Int64 Signed integer (64 bits). Int8 Signed integer (8 bits). String String. Table Table. UInt16 Unsigned integer (16 bits). UInt32 Unsigned integer (32 bits). UInt64 Unsigned integer (64 bits). UInt8 Unsigned integer (8 bits). Unused Unused field."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Enums | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Enums Enums Endianness Endianness (byte order). FieldType Possible field types in ARMP files."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.ArmpTable.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.ArmpTable.html",
    "title": "Class ArmpTable | TF3 Yakuza Plugins",
    "keywords": "Class ArmpTable Dragon Engine ARMP table. Inheritance Object ArmpTable Implements IEquatable < ArmpTable > Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Formats Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public sealed class ArmpTable : IFormat, IEquatable<ArmpTable> Constructors | Improve this Doc View Source ArmpTable(Int32, Byte, Int32, Boolean, Int32, Boolean, Int32) Initializes a new instance of the ArmpTable class. Declaration public ArmpTable(int id, byte flags, int recordCount, bool recordInvalid, int fieldCount, bool fieldInvalid, int valueStringCount) Parameters Type Name Description Int32 id Table id. Byte flags Table flags. Int32 recordCount Record count. Boolean recordInvalid Record invalid. Int32 fieldCount Field count. Boolean fieldInvalid Field invalid. Int32 valueStringCount Value strings count. | Improve this Doc View Source ArmpTable(ArmpTableHeader) Initializes a new instance of the ArmpTable class. Declaration public ArmpTable(ArmpTableHeader header) Parameters Type Name Description ArmpTableHeader header Table info. Properties | Improve this Doc View Source EmptyValues Gets or sets the empty values matrix. Declaration public bool[][] EmptyValues { get; set; } Property Value Type Description Boolean [][] | Improve this Doc View Source FieldCount Gets the number of fields. Declaration public int FieldCount { get; } Property Value Type Description Int32 | Improve this Doc View Source FieldExistence Gets or sets the field existence info. Declaration public bool[] FieldExistence { get; set; } Property Value Type Description Boolean [] | Improve this Doc View Source FieldIds Gets or sets the field IDs. Declaration public string[] FieldIds { get; set; } Property Value Type Description String [] | Improve this Doc View Source FieldInfo Gets or sets the field info. Declaration public byte[] FieldInfo { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source FieldInvalid Gets a value indicating whether the table fields has invalid values. Declaration public bool FieldInvalid { get; } Property Value Type Description Boolean | Improve this Doc View Source FieldOrder Gets or sets the field order. Declaration public int[] FieldOrder { get; set; } Property Value Type Description Int32 [] | Improve this Doc View Source FieldTypes Gets or sets the field type info. Declaration public FieldType[] FieldTypes { get; set; } Property Value Type Description FieldType [] | Improve this Doc View Source Flags Gets the table flags. Declaration public byte Flags { get; } Property Value Type Description Byte | Improve this Doc View Source GameVarFieldType Gets or sets the game var field type. Declaration public int[] GameVarFieldType { get; set; } Property Value Type Description Int32 [] | Improve this Doc View Source Id Gets the table id. Declaration public int Id { get; } Property Value Type Description Int32 | Improve this Doc View Source Indexer Gets or sets the table indexer. Declaration public ArmpTable Indexer { get; set; } Property Value Type Description ArmpTable | Improve this Doc View Source RawRecordMemberInfo Gets or sets the raw record member info. Declaration public FieldType[] RawRecordMemberInfo { get; set; } Property Value Type Description FieldType [] | Improve this Doc View Source RecordCount Gets the number of records. Declaration public int RecordCount { get; } Property Value Type Description Int32 | Improve this Doc View Source RecordExistence Gets or sets the record existence info. Declaration public bool[] RecordExistence { get; set; } Property Value Type Description Boolean [] | Improve this Doc View Source RecordIds Gets or sets the record IDs. Declaration public string[] RecordIds { get; set; } Property Value Type Description String [] | Improve this Doc View Source RecordInvalid Gets a value indicating whether the table records has invalid values. Declaration public bool RecordInvalid { get; } Property Value Type Description Boolean | Improve this Doc View Source RecordOrder Gets or sets the record order. Declaration public int[] RecordOrder { get; set; } Property Value Type Description Int32 [] | Improve this Doc View Source Values Gets or sets the values matrix. Declaration public object[][] Values { get; set; } Property Value Type Description Object [][] | Improve this Doc View Source ValueStringCount Gets the number of value strings. Declaration public int ValueStringCount { get; } Property Value Type Description Int32 | Improve this Doc View Source ValueStrings Gets or sets the value strings. Declaration public string[] ValueStrings { get; set; } Property Value Type Description String [] Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean | Improve this Doc View Source Equals(ArmpTable) Declaration public bool Equals(ArmpTable other) Parameters Type Name Description ArmpTable other Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Implements IEquatable<>"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Formats | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Formats Classes ArmpTable Dragon Engine ARMP table."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.ArmpTableHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.ArmpTableHeader.html",
    "title": "Class ArmpTableHeader | TF3 Yakuza Plugins",
    "keywords": "Class ArmpTableHeader ARMP table header. Inheritance Object ArmpTableHeader Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Types Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class ArmpTableHeader : object Properties | Improve this Doc View Source EmptyValuesPointer Gets or sets the pointer to the table of empty values. Declaration public int EmptyValuesPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source FieldCount Gets or sets the number of fields (columns) included in the table. Declaration public int FieldCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldExistencePointer Gets or sets the pointer to the field existence (validity) bits. Declaration public int FieldExistencePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldIdPointer Gets or sets the pointer to the field ids table. Declaration public int FieldIdPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source FieldInfoPointer Gets or sets the pointer to the field info list. Declaration public int FieldInfoPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldInvalid Gets or sets a value indicating whether the fields are invalid (??). Declaration public bool FieldInvalid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FieldOrderPointer Gets or sets the pointer to the field order list. Declaration public int FieldOrderPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldTypePointer Gets or sets the pointer to the field types list. Declaration public int FieldTypePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Flags Gets or sets the flags. Declaration public byte Flags { get; set; } Property Value Type Description Byte | Improve this Doc View Source GameVarFieldTypePointer Gets or sets the pointer to the game variable field list. Declaration public int GameVarFieldTypePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Id Gets or sets the id. Declaration public int Id { get; set; } Property Value Type Description Int32 | Improve this Doc View Source IndexerPointer Gets or sets the pointer to the indexer (??). Declaration public int IndexerPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RawRecordMemberInfoPointer Gets or sets the pointer to the record member info (type) list. Declaration public int RawRecordMemberInfoPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RecordCount Gets or sets the number of records (rows) included in the table. Declaration public int RecordCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RecordExistencePointer Gets or sets the pointer to the record existence (validity) bits. Declaration public int RecordExistencePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RecordIdPointer Gets or sets the pointer to the record ids table. Declaration public int RecordIdPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source RecordInvalid Gets or sets a value indicating whether the records are invalid (??). Declaration public bool RecordInvalid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RecordOrderPointer Gets or sets the pointer to the record order list. Declaration public int RecordOrderPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ValuesPointer Gets or sets the pointer to the values (record content) table. Declaration public int ValuesPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source ValueStringCount Gets or sets the number of value strings included in the table. Declaration public int ValueStringCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ValueStringPointer Gets or sets the pointer to value strings table. Declaration public int ValueStringPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.FileHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.FileHeader.html",
    "title": "Class FileHeader | TF3 Yakuza Plugins",
    "keywords": "Class FileHeader Archive header. Inheritance Object FileHeader Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Types Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class FileHeader : object Properties | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source Magic Gets or sets the file magic number. Declaration public string Magic { get; set; } Property Value Type Description String | Improve this Doc View Source PlatformId Gets or sets the platform id value. Declaration public byte PlatformId { get; set; } Property Value Type Description Byte | Improve this Doc View Source Relocated Gets or sets the relocated byte. Declaration public byte Relocated { get; set; } Property Value Type Description Byte | Improve this Doc View Source Size Gets or sets the data size. In newer versions it is always 0. Declaration public uint Size { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SizeExtended Gets or sets the size extended byte. Declaration public byte SizeExtended { get; set; } Property Value Type Description Byte | Improve this Doc View Source Version Gets or sets the version value. Declaration public uint Version { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Types | TF3 Yakuza Plugins",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Types Classes ArmpTableHeader ARMP table header. FileHeader Archive header."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to the project | TF3 Yakuza Plugins",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "dev/Changelog.html": {
    "href": "dev/Changelog.html",
    "title": "vNext (August 08, 2022) | TF3 Yakuza Plugins",
    "keywords": "vNext (August 08, 2022) As part of this release we had 2 issues closed. bug #13 Fix CI enhancement #12 Allow decompressing SLLZ while reading Par and converting to ParFile without compression v1.0.2 (December 28, 2021) As part of this release we had 1 issue closed. bug #7 Add missing script v1.0.1 (December 28, 2021) enhancement #6 Change runtime identifier to \"any\" v1.0.0 (December 27, 2021) First release"
  },
  "guides/Contributing.html": {
    "href": "guides/Contributing.html",
    "title": "Contributing to the project | TF3 Yakuza Plugins",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "guides/First-Steps.html": {
    "href": "guides/First-Steps.html",
    "title": "First steps | TF3 Yakuza Plugins",
    "keywords": "First steps Welcome to this project!"
  },
  "index.html": {
    "href": "index.html",
    "title": "TF3 Yakuza Plugins | TF3 Yakuza Plugins",
    "keywords": "TF3 Yakuza Plugins This repository contains plugins and scripts compatible with TF3 . Contents Common TF3.YarhlPlugins.YakuzaCommon.dll : Plugin for reading and writing common formats in Yakuza games. Yakuza Kiwami 2 PC TF3.YarhlPlugins.YakuzaKiwami2.dll : Plugin for reading and writing Yakuza Kiwami 2 ARMP archives. TF3.Script.YakuzaKiwami2.json : Script for extracting and repacking all the needed assets in Yakuza Kiwami 2 (Steam version) for translation. TF3.Patch.YakuzaKiwami2VWF.1337 : Patch for the Yakuza Kiwami 2 (Steam version) executable to allow the use of a variable width font for extended latin characters. FontSpacingEditor.exe : App to edit the character spacing table in Yakuza Kiwami 2. Usage Plugins and script Copy TF3.YarhlPlugin.YakuzaCommon.dll , TF3.YarhlPlugin.YakuzaCommon.deps.json , TF3.YarhlPlugin.YakuzaKiwami2.dll and TF3.YarhlPlugin.YakuzaKiwami2.deps.json to the plugins directory of TF3. Copy EPPlus.dll and DotNetZip.dll to the root directory of TF3. Copy the TF3.Script.YakuzaKiwami2.json to the scripts directory of TF3. VWF Patch Create a patches directory in the translation directory. Copy TF3.Patch.YakuzaKiwami2VWF.1337 inside it. For more information about patches, see TF3 documentation. FontSpacingEditor See README.md Credits Thanks to Pleonex for Yarhl and PleOps.Cake . ARMP reader and writer is based on Capitan Retraso's reARMP . Other libraries used: DotNetZip , EPPlus , BCnEncoder.Net , ImageSharp . Icon by Vecteezy ."
  },
  "README.html": {
    "href": "README.html",
    "title": "TF3 Yakuza Plugins | TF3 Yakuza Plugins",
    "keywords": "TF3 Yakuza Plugins This repository contains plugins and scripts compatible with TF3 . Contents Common TF3.YarhlPlugins.YakuzaCommon.dll : Plugin for reading and writing common formats in Yakuza games. Yakuza Kiwami 2 PC TF3.YarhlPlugins.YakuzaKiwami2.dll : Plugin for reading and writing Yakuza Kiwami 2 ARMP archives. TF3.Script.YakuzaKiwami2.json : Script for extracting and repacking all the needed assets in Yakuza Kiwami 2 (Steam version) for translation. TF3.Patch.YakuzaKiwami2VWF.1337 : Patch for the Yakuza Kiwami 2 (Steam version) executable to allow the use of a variable width font for extended latin characters. FontSpacingEditor.exe : App to edit the character spacing table in Yakuza Kiwami 2. Usage Plugins and script Copy TF3.YarhlPlugin.YakuzaCommon.dll , TF3.YarhlPlugin.YakuzaCommon.deps.json , TF3.YarhlPlugin.YakuzaKiwami2.dll and TF3.YarhlPlugin.YakuzaKiwami2.deps.json to the plugins directory of TF3. Copy EPPlus.dll and DotNetZip.dll to the root directory of TF3. Copy the TF3.Script.YakuzaKiwami2.json to the scripts directory of TF3. VWF Patch Create a patches directory in the translation directory. Copy TF3.Patch.YakuzaKiwami2VWF.1337 inside it. For more information about patches, see TF3 documentation. FontSpacingEditor See README.md Credits Thanks to Pleonex for Yarhl and PleOps.Cake . ARMP reader and writer is based on Capitan Retraso's reARMP . Other libraries used: DotNetZip , EPPlus , BCnEncoder.Net , ImageSharp . Icon by Vecteezy ."
  }
}